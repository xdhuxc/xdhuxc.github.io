<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>xdhuxc</title>
    <link>https://xdhuxc.github.io/</link>
    <description>Recent content on xdhuxc</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&amp;copy; 2019. xdhuxc All rights reserved.</copyright>
    <lastBuildDate>Thu, 09 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://xdhuxc.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>关于</title>
      <link>https://xdhuxc.github.io/about/</link>
      <pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xdhuxc.github.io/about/</guid>
      <description>此网站用于展示技术博客和个人文章！</description>
    </item>
    
    <item>
      <title>基于 Hugo 和 GitHub 搭建个人网站</title>
      <link>https://xdhuxc.github.io/post/github_hugo/</link>
      <pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://xdhuxc.github.io/post/github_hugo/</guid>
      <description>Hugo 的安装的基本使用 1、准备工作，创建工作目录 blog
wanghuans-MacBook-Pro:~ wanghuan$ mkdir blog wanghuans-MacBook-Pro:blog wanghuan$ pwd /Users/wanghuan/blog  2、安装 Hugo
wanghuans-MacBook-Pro:blog wanghuan$ brew install hugo # 安装 hugo Updating Homebrew... ==&amp;gt; Auto-updated Homebrew! Updated 1 tap (homebrew/core). ==&amp;gt; Updated Formulae allure ==&amp;gt; Downloading https://homebrew.bintray.com/bottles/hugo-0.55.5.mojave.bottle.tar.gz ==&amp;gt; Downloading from https://akamai.bintray.com/2c/2c88f996c36157b5e451274663b867ad4e1c3f6f04c57d1d43cdd8c631a5b209?__gda__=exp=1557368278~hmac=afe54c6d07b0ae0a78089e030533b7dae7 ######################################################################## 100.0% ==&amp;gt; Pouring hugo-0.55.5.mojave.bottle.tar.gz ==&amp;gt; Caveats Bash completion has been installed to: /usr/local/etc/bash_completion.d ==&amp;gt; Summary 🍺 /usr/local/Cellar/hugo/0.55.5: 31 files, 40.7MB ==&amp;gt; `brew cleanup` has not been run in 30 days, running now.</description>
    </item>
    
    <item>
      <title>SpringBoot 应用启动报错，Unregistering JMX-exposed beans on shutdown</title>
      <link>https://xdhuxc.github.io/post/springboot-jmx/</link>
      <pubDate>Thu, 25 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://xdhuxc.github.io/post/springboot-jmx/</guid>
      <description>使用 Spring Boot 编写的Java 程序，其 pom.xml文件内容为：
	&amp;lt;parent&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-parent&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;1.5.13.RELEASE&amp;lt;/version&amp;gt; &amp;lt;/parent&amp;gt; &amp;lt;dependencies&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-web&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-data-mongodb&amp;lt;/artifactId&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;/dependencies&amp;gt;  运行该程序时，报错如下：
 . ____ _ __ _ _ /\\ / ___&#39;_ __ _ _(_)_ __ __ _ \ \ \ \ ( ( )\___ | &#39;_ | &#39;_| | &#39;_ \/ _` | \ \ \ \ \\/ ___)| |_)| | | | | || (_| | ) ) ) ) &#39; |____| .</description>
    </item>
    
    <item>
      <title>Linux 中 Shell 脚本执行的三种方式</title>
      <link>https://xdhuxc.github.io/post/linux-shell-execute/</link>
      <pubDate>Mon, 13 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://xdhuxc.github.io/post/linux-shell-execute/</guid>
      <description>在 Linux 系统中，Shell 脚本的执行方式通常有如下三种：
通过解释器 bash 或 sh 执行 通过解释器时的命令格式为：
bash shell-script-name # 通过 bash 解释器来执行 shell 脚本。 或 sh shell-script-name # 通过 sh 解释器来执行 shell 脚本。  当脚本文件本身没有可执行权限（即文件权限属性 x 位为：“-”）时经常使用的方式；或者脚本文件开头没有指定解释器时，需要使用这种方法。使用起来比较方便，操作时节省了为文件添加执行权限的步骤。当然，也可以选择其他类型的解释器，比如ksh，csh，zsh等。
（1）创建文件abc.sh
[root@xdhuxc ~]# touch abc.sh [root@xdhuxc ~]# ls abc.sh [root@xdhuxc ~]#  （2）写入要执行的命令：
[root@xdhuxc ~]# cat &amp;gt;&amp;gt; abc.sh &amp;lt;&amp;lt; EOF # 向 abc.sh 中追加内容。 &amp;gt; #!/usr/bin/env bash &amp;gt; echo &amp;quot;Hello Shell.&amp;quot; &amp;gt; EOF [root@xdhuxc ~]# cat abc.sh # 显示 abc.</description>
    </item>
    
    <item>
      <title>MongoDB 数据库初步使用</title>
      <link>https://xdhuxc.github.io/post/mongodb-simple-use/</link>
      <pubDate>Fri, 20 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://xdhuxc.github.io/post/mongodb-simple-use/</guid>
      <description>安装好 MongoDB 数据库后，接下来我们演示下通过命令行来操纵 MongoDB 数据库。
配置文件参数修改 MongoDB 数据库的配置文件为：/etc/mongod.conf。 为了使外部应用能够连接本机（使用 VMware Workstation 创建的虚拟机）安装的 MongoDB 数据库，需要修改 /etc/mongod.conf 文件中的 127.0.0.1 为本机IP地址。比如，修改127.0.0.1 为本虚拟机IP地址 192.168.91.128，连接端口保持默认的 27017 即可，如下所示：
# network interfaces net: port: 27017 bindIp: 192.168.91.128 # Enter 0.0.0.0,:: to bind to all IPv4 and IPv6 addresses or, alternatively, use the net.bindIpAll setting.  使用 MongoDB shell 操作数据库 连接 MongoDB 数据库 使用的命令为：
mongo --host 192.168.91.128 --port 27017 或者 mongo --host 192.168.91.128 # 由于使用 mongodb的默认端口，可以省略对端口的指定。  如下所示：</description>
    </item>
    
    <item>
      <title>在 CentOS 7 上安装 MongoDB 数据库</title>
      <link>https://xdhuxc.github.io/post/centos7-install-mongodb/</link>
      <pubDate>Fri, 06 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://xdhuxc.github.io/post/centos7-install-mongodb/</guid>
      <description>MongoDB 简介 MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。
MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。
准备工作 （1）在 /etc/yum.repos.d 目录下创建文件 mongodb-org-4.0.repo，内容为：
[mongodb-org-4.0] name=MongoDB Repository baseurl=https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/development/x86_64/ gpgcheck=1 enabled=1 gpgkey=https://www.mongodb.org/static/pgp/server-3.8.asc  （2）关闭SELinux
setenforce 0  安装MongoDB 执行如下命令安装MongoDB
yum install -y mongodb-org-unstable.x86_64  MongoDB的配置文件路径为：
/etc/mongod.conf  在该文件中配置有MongoDB的日志文件路径和数据文件路径 日志文件路径为：
/var/log/mongodb  数据文件路径为：
/var/lib/mongo  如果使用其他用户启动 MongoDB 进程，需要确保该用户对 /var/log/mongodb 和/var/lib/mongo 有访问权限。
MongoDB进程管理命令 1、查看 MongoDB 的启动状态
systemctl status mongod  2、停止 MongoDB 进程
systemctl stop mongod  3、重启 MongoDB 进程
systemctl restart mongod  4、启动 MongoDB shell</description>
    </item>
    
    <item>
      <title>Ansible 学习之简单入门</title>
      <link>https://xdhuxc.github.io/post/ansible-simple-use/</link>
      <pubDate>Mon, 14 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://xdhuxc.github.io/post/ansible-simple-use/</guid>
      <description>Ansible 简介 Ansible 是一种集成IT系统的配置管理、应用部署、执行特定任务的运维工具。
Ansible 基于 Python 语言实现，由 Paramiko（由 Python 实现的高质量 OpenSSH 库） 和 PyYAML 两个关键模块构建。
Ansible 特点  部署简单，只需要在主控端部署 ansible 环境，被控端无需做任何操作。 默认使用 SSH（Secure Shell）协议对设备进行管理。 主从集中化管理。 配置简单，功能强大，扩展性强。 支持 API 及自定义模块，可通过 Python 轻松扩展。 通过 Playbooks 来定制强大的配置，状态管理。 对云计算平台，大数据都有很好的支持。 提供一个功能强大、操作性强的 Web 管理界面和 REST API 接口&amp;mdash; AWX 平台。  Ansible 与 SaltStack 相同点 都具备功能强大、灵活的系统管理、状态配置，都使用 YAML 格式来描述配置，两者都提供丰富的模板及 API，对云计算和大数据都有很好的支持。
区别 最大的区别是 Ansible 无需在被监控主机部署任何客户端代理，默认通过 SSH 通道进行远程命令执行或下发配置。
Ansible 使用 ansible 安装 使用 YUM 安装 ansible
yum install -y ansible  ansible 配置文件 ansible 的配置文件在 /etc/ansible 目录下</description>
    </item>
    
    <item>
      <title>Ansible 学习之常用模块</title>
      <link>https://xdhuxc.github.io/post/ansible-common-model/</link>
      <pubDate>Wed, 02 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://xdhuxc.github.io/post/ansible-common-model/</guid>
      <description>模块相关命令 （1）列出 ansible 支持的模块
ansible-doc -l  （2）查看该模块的帮助信息
ansible-doc ping # 查看 ping 模块的帮助信息   以下实验均是在 IP 地址为： 192.168.91.128 的虚拟机上操作的。 /etc/ansible/hosts 文件中配置如下：
# This is the default ansible &#39;hosts&#39; file. # # It should live in /etc/ansible/hosts # # - Comments begin with the &#39;#&#39; character # - Blank lines are ignored # - Groups of hosts are delimited by [header] elements # - You can enter hostnames or ip addresses # - A hostname/ip can be a member of multiple groups # Ex 1: Ungrouped hosts, specify before any group headers.</description>
    </item>
    
    <item>
      <title>联系</title>
      <link>https://xdhuxc.github.io/contact/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://xdhuxc.github.io/contact/</guid>
      <description> 姓名  电子邮箱  城市     提交   </description>
    </item>
    
  </channel>
</rss>